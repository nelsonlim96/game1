{"version":3,"sources":["components/container.js","components/words.js","components/Hangman.js","components/shuffle.js","App.js","serviceWorker.js","index.js","components/images/apple.png"],"names":["StyledContainer","withStyles","root","background","borderRadius","border","color","height","padding","width","display","margin","Container","PROGRAMING_LANG","randomWord","Math","floor","random","length","gameStat","shuffleArray","original","array","i","j","Hangman","props","resetButton","setState","mistake","guessed","Set","answer","state","order","shuffledImageSizes","imageSizes","handleGuess","bind","keyPress","window","addEventListener","this","split","map","bingo","has","images","value","letter","st","add","includes","event","keyCode","key","onClick","e","target","disabled","gameOver","maxWrong","altText","isWinner","guessedWord","join","generateButtons","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","classname","src","originalImages","alt","maxWidth","Component","defaultProps","apple","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d51584f3.chunk.js","sourcesContent":["import { Container } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledContainer = withStyles({\r\n    root: {\r\n      background: '#F0F8FF',\r\n      borderRadius: '20px',\r\n      border: '2px solid black',\r\n      color: 'white',\r\n      height: '15em',\r\n      padding: '0 30px',\r\n      width: '15em',\r\n      display: 'inline-block',\r\n      margin: '0 1em 0 1em',\r\n      '@media (max-width: 1200px)': {\r\n        padding: '0 10px',\r\n        height: '8em',\r\n        width: '8em',\r\n      },\r\n      '@media (max-width: 800px)': {\r\n        padding: '0 5px',\r\n        height: '5em',\r\n        width: '5em',\r\n      }\r\n    }\r\n  })(Container);\r\n\r\n  export { StyledContainer };","var PROGRAMING_LANG = [\r\n\t\"python\",\r\n\t\"javascript\",\r\n\t\"dart\",\r\n\t\"typescript\",\r\n\t\"java\",\r\n\t\"html\",\r\n\t\"css\",\r\n\t\"c\",\r\n\t\"csharp\",\r\n\t\"golang\",\r\n\t\"kotlin\",\r\n\t\"php\",\r\n\t\"sql\",\r\n\t\"ruby\"\r\n];\r\n\r\nfunction randomWord() {\r\n\treturn PROGRAMING_LANG[Math.floor(Math.random() * PROGRAMING_LANG.length)];\r\n}\r\n\r\nexport { randomWord };\r\n","import React, { Component } from \"react\";\nimport { StyledContainer } from './container';\nimport { randomWord } from \"./words\";\n\nimport apple from \"./images/apple.png\";\n\nimport shuffleArray from \"./shuffle\";\n\nlet gameStat;\nclass Hangman extends Component {\n\tstatic defaultProps = {\n\t\tmaxWrong: 4,\n\t\toriginalImages: [apple, apple, apple, apple],\n\t\timageSizes: ['responsive apple1', 'responsive apple2', 'responsive apple3', 'responsive apple4']\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmistake: 0,\n\t\t\tguessed: new Set(),\n\t\t\tanswer: randomWord(),\n\t\t\torder: ['ascending','descending'],\n\t\t\tshuffledImageSizes: shuffleArray(this.props.imageSizes)\n\t\t};\n\t\tthis.handleGuess = this.handleGuess.bind(this);\n\t\tthis.keyPress = this.keyPress.bind(this);\n\t\twindow.addEventListener('keydown', this.keyPress);\n\t}\n\n\tguessedWord() {\n\t\treturn this.state.answer.split(\"\").map(bingo => (this.state.guessed.has(bingo) ? bingo : \"_\"));\n\t}\n\n\tshuffle() {\n\t\treturn shuffleArray(this.props.images)\n\t}\n\n\thandleGuess(value) {\n\t\tlet letter = value;\n\t\tthis.setState(st => ({\n\t\t\tguessed: st.guessed.add(letter),\n\t\t\tmistake: st.mistake + (st.answer.includes(letter) ? 0 : 1)\n\t\t}));\n\t}\n\n\tkeyPress(event) {\n\t\tif(gameStat === 'YOU WON' || gameStat === \"YOU LOST\") {\n\t\t\tif(event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n\t\t\t\tthis.resetButton();\n\t\t\t}\n\t\t}\n\t\telse if((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 97 && event.keyCode <= 122)) {\n\t\t\tthis.handleGuess(event.key);\n\t\t}\n\t\telse if(event.keyCode === 8 || event.keyCode === 13 || event.keyCode === 32) {\n\t\t\tthis.resetButton();\n\t\t}\n\t\telse {}\n\t}\n\n\tgenerateButtons() {\n\t\treturn \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(letter => (\n\t\t\t<button\n\t\t\t\tkey={letter}\n\t\t\t\tvalue={letter}\n\t\t\t\tonClick={(e) => this.handleGuess(e.target.value)}\n\t\t\t\tdisabled={this.state.guessed.has(letter)}\n\t\t\t>\n\t\t\t\t{letter}\n\t\t\t</button>\n\t\t));\n\t}\n\n\tresetButton = () => {\n\t\tthis.setState({\n\t\t\tmistake: 0,\n\t\t\tguessed: new Set(),\n\t\t\tanswer: randomWord()\n\t\t});\n\t};\n\n\trender() {\n\t\tconst gameOver = this.state.mistake >= this.props.maxWrong;\n\t\tconst altText = `${this.state.mistake}/${this.props.maxWrong} wrong guesses`;\n\t\tconst isWinner = this.guessedWord().join(\"\") === this.state.answer;\n\t\tgameStat = this.generateButtons();\n\t\tif (isWinner) {\n\t\t\tgameStat = \"YOU WON\";\n\t\t}\n\t\tif (gameOver) {\n\t\t\tgameStat = \"YOU LOST\";\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='Hangman'>\n\t\t\t\t<nav className='navbar navbar-expand-lg'>\n\t\t\t\t\t<a className='navbar-brand text-dark fontSpace' href='/'>\n\t\t\t\t\t\tSorting Game\n\t\t\t\t\t</a>\n\t\t\t\t\t<span className='d-xl-none d-lg-none text-dark fontSpace'>\n\t\t\t\t\t\tErrors: {this.state.mistake}\n\t\t\t\t\t</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='navbar-toggler sr-only'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tdata-toggle='collapse'\n\t\t\t\t\t\tdata-target='#navbarText'\n\t\t\t\t\t\taria-controls='navbarText'\n\t\t\t\t\t\taria-expanded='false'\n\t\t\t\t\t\taria-label='Toggle navigation'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className='navbar-toggler-icon'></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className='collapse navbar-collapse' id='navbarText'>\n\t\t\t\t\t\t<ul className='navbar-nav mr-auto'>\n\t\t\t\t\t\t\t<li className='nav-item '></li>\n\t\t\t\t\t\t\t<li className='nav-item'></li>\n\t\t\t\t\t\t\t<li className='nav-item'></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<span className='navbar-text text-dark fontSpace'>Errors: {this.state.mistake}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t<div classname='container center'>\n\t\t\t\t\t<p className='text-center instructions'>Arrange in {this.state.order[0]} order</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='imgArray text-center container'>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className='responsive apple4' alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className='responsive apple3' alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className='responsive apple2' alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className='responsive apple1' alt={altText} /></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div classname='container'>\n\t\t\t\t\t<StyledContainer maxWidth=\"sm\">\n\t\t\t\t\t\t<h1>Hello</h1>\n\t\t\t\t\t</StyledContainer>\n\t\t\t\t\t<StyledContainer maxWidth=\"sm\">\n\t\t\t\t\t\t<h1>Hello</h1>\n\t\t\t\t\t</StyledContainer>\n\t\t\t\t\t<StyledContainer maxWidth=\"sm\">\n\t\t\t\t\t\t<h1>Hello</h1>\n\t\t\t\t\t</StyledContainer>\n\t\t\t\t\t<StyledContainer maxWidth=\"sm\">\n\t\t\t\t\t\t<h1>Hello</h1>\n\t\t\t\t\t</StyledContainer>\n\t\t\t\t</div>\n\t\t\t\t<div className='imgArray text-center container'>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className={this.state.shuffledImageSizes[0]} alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className={this.state.shuffledImageSizes[1]} alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className={this.state.shuffledImageSizes[2]} alt={altText} /></li>\n\t\t\t\t\t\t<li><img src={this.props.originalImages[0]} className={this.state.shuffledImageSizes[3]} alt={altText} /></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t<button className='Hangman-reset' onClick={this.resetButton}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Hangman;\n","const shuffleArray = (original) => {\r\n    const array = original;\r\n    for (let i = array.length - 1; i > 0; i -= 1) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\nexport default shuffleArray;","import React from \"react\";\nimport Hangman from \"./components/Hangman\";\n\nfunction App() {\n\treturn (\n\t\t<div className='container'>\n\t\t\t<Hangman />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/apple.ff4c70f3.png\";"],"sourceRoot":""}